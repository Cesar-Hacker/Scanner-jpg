#!/data/data/com.termux/files/usr/bin/bash
#Coded by Ivam3 on 06/02/18
#

# Var
        #Colors

                red='\033[1;31m'
		green='\033[1;32m'
                yellow='\033[1;33m'
                blue='\033[1;34m'
                magenta='\033[1;35m'
                cyan='\033[1;36m'
                reset='\033[0m'

	#command
		PWD=$(pwd)

function banner {
	echo $(clear)
	echo
        printf "$cyan"
        echo "                      Cesar Hacker Gray"
	printf "$green"
	echo " ____                                  _ ____   ____"
	echo "/ ___|  ___ __ _ _ __   ___ _ __      | |  _ \ / ___|"
	echo "\___ \ / __/ _  |  _ \ / _ \  __|  _  | | |_) | |  _"
	echo " ___) | (_| (_| | | | |  __/ |    | |_| |  __/| |_| |"
	echo "|____/ \___\__,_|_| |_|\___|_|     \___/|_|    \____| v .1.23"
}

function Menu {
	banner
echo "
	                    MAIN MENU"
	echo
	printf  "$yellow [*] Gray : $red What do you wanna do ? $cyan\n"
	echo
	printf "$yellow 1) $green Extract Meta Data.\n"
	printf "$yellow 2) $green Extract GPS Location. \n"
	printf "$yellow 3) $green Search files saved.\n"
        printf "$gren 0) $red Exit.\n"
        echo
        printf "$cyan"
        read -p "Gray >> " Opc
        case $Opc in
                1)
                        Photo
			Opc_MD
                        ;;
                2)
                        Photo
			Opc_GPS
                        ;;
                3)
                        Search
                        ;;
                0)
                        Goodbye
                        ;;
        esac
}

function Photo {
	banner
echo "	    
	        SET_FILE"
	echo
	echo
        printf "$cyan"
        while read -p "Gray : Tell me, where your photo is ? >> " Photo && [ -z $Photo ]; do
                printf "        $blue Please type the photo location $green \n"
                sleep 2
done
        if [ -e $Photo ]; then
        cp $Photo $PWD/Gray.jpg
        chmod 777 Gray.jpg

        else
        printf "        $yellow There is not such photo \n"
        sleep 2
        Menu
fi

}

function extract_MD {
	php modules/MetaData.php > tmp/MD.txt;
	sed -i 's/; /\n/g' tmp/MD.txt
}

function extract_GPS {
	php modules/GPS.php | grep float > tmp/GPS.txt
}

function MD_backup {
        cp $PWD/tmp/MD.txt $PWD/database/MD/$MD
}

function GPS_backup {
	cp $PWD/tmp/GPS.txt $PWD/database/GPS/$GPS
}

function Opc_MD {
	banner
echo "	     
                EXTRACT MD"
printf "$green"
	echo
	printf "$green [*] Gray : $cyan Extracting meta data . . .\n"
	extract_MD
	printf "$cyan
		Temporally was saved as $yellow $PWD/tmp/MD.txt"
	sleep 3
	MD_results
}

function MD_results {
	banner
echo "	      
	         MD RESULTS"
	echo
	printf "$green 1) $cyan Show results \n"
	printf "$green 2) $cyan Create a backup of EXtracted InFormation \n"
	printf "$green 3) $cyan Back to Main Menu\n"
	printf "$green 0) $cyan Exit \n"
	printf "$green"
	echo
	read -p "Gray >> " MD
	printf "$reset"
	case $MD in
		1)
			banner
echo "	     
	        MD RESULTS"
			echo
	cat tmp/MD.txt | grep "Gray : No header data found" > tmp/pipe
			if [ -s tmp/pipe ]; then
					echo
					printf "$red                    [W] Gray : No header data found."
					echo "
					"
				else
					printf "$green"
					cat tmp/MD.txt
			fi
				echo
			printf "$yellow [*] Gray : $cyan Press enter to continue $green"
                        read enter
			echo $(clear)
			MD_results
                        ;;
		2)
			banner
echo "	    
	        MD BACKUP"
                        echo
			printf "$green"
                        while read -p "
Gray : Save as (example.php) >>  " MD && [ -z $MD ]; do
                                printf "$red
                                        [W] O_ops!!                                                                                                   $red"
                        done
			sleep 1
			if [ -e $PWD/database/MD/$MD ]; then
				echo
                                printf "		$red SORRY, there exist a file named $reset $MD
                                "
                                sleep 3
                                MD_results
                        else
                                MD_backup
                                echo
                                printf "		$cyan GREAT!! $green it was saved as $cyan $MD"
                                sleep 3
                                MD_results
                        fi
                        ;;
		3)
			Menu
			;;
		0)
			Goodbye
        esac
}

function Opc_GPS {
	banner
echo "	   
               EXTRACT GPS"
	echo
	printf "$red [*] Gray : $cyan Extracting GPS location . . .\n"
	extract_GPS
	printf "$cyan
		Temporally was saved as $yellow $PWD/tmp/GPS.txt "
	sleep 3
	GPS_results
}

function GPS_results {
	banner
echo "	   
                GPS RESULTS"
	echo
	printf "$green 1) $yellow Show results \n"
	printf "$green 2) $yellow Create a backup of EXtracted InFormation \n"
	printf "$green 3) $yellow Back to Main Menu \n"
	printf "$cyan 0) $red Exit \n"
	printf "$green"
	echo
	read -p "Gray >> " GPS
	printf "$cyan"
	case $GPS in
		1)
			banner
echo "	    
	        GPS RESULTS"
			echo
			if [ -s tmp/GPS.txt ]; then
				printf "$yellow"
                                echo
                                        cat tmp/GPS.txt
                                else
                                        echo
					printf "$red 			[W] Gray : No header data found"
                                        echo "
					"
				fi
				echo
			printf "$green [*] Gray : $yellow Press enter to continue $cyan"
			read enter
			echo $(clear)
			GPS_results
			;;
		2)
			banner
echo "	   
	        GPS BACKUP"
                        echo
			printf "$cyan"
			while read -p "
Gray : Save as (example.txt) >>  " GPS && [ -z $GPS ]; do
				printf "$red
					[I] O_ops!!
					$magenta"
			done
			sleep 1

			if [ -e $PWD/database/GPS/$GPS ]; then
				echo
				printf "		$red SORRY, there exist a file named $red $GPS
				"
				sleep 3
				GPS_results
			else
				GPS_backup
				echo
				printf "		$cyann GREAT!! $green it was saved as $red $GPS"
				sleep 3
				GPS_results
			fi
			
			;;
		3)
			Menu
			;;
		0)
			Goodbye
	esac
}

function Search {
	banner
echo "	    
	        TO SEARCH"
	echo
	printf  "$magenta [*] Gray : $cyan What kind of file are you search? \n"
        echo
        printf "$yellow 1) $cyan Meta data.\n"
	printf "$yellow 2) $cyan GPS Location.\n"
        printf "$yellow 3) $cyan Back to Main Menu.\n"
        printf "$cyan 0) $red Exit.\n"
        echo
        printf "$cyan"
        read -p "gray >> " SRCH
        case $SRCH in
		
		1)
			Search_MD
			;;
                2)
			Search_GPS
                        ;;
                3)
                	Menu
			;;
                0)
        		Goodbye
                        ;;
	esac
}


function Menu_SRCH_MD {                                                                                                             banner
echo "	    
	        TO SEARCH"
        echo
	printf "$cyan So, what do you wanna do ?"
	echo "
	"
	printf "$yellow 1) $green Look at the content. \n"
	printf "$yellow 2) $green Rename $File \n"
	printf "$yellow 3) $green Copy $File \n"
	printf "$yellow 4) $green Delete $File \n"
	printf "$yellow 5) $green Search another file. \n"
        printf "$yellow 6) $green Back to Main Menu. \n"
        printf "$cyan 0) $red Exit"
	echo "
	"
	printf "$red"
        read -p "IbyC >> " SRCH_file_MD
	Case_SRCH_MD
}

function Search_MD {
	banner
echo "	  
		TO SEARCH"
	echo
	printf "$cyan"
	while read -p "Gray : Name of the file to search ? >>  " File && [ -z $File ]; do
		printf "$red
			[W] O_ops!!
		$cyan"
	done

	sleep 1

	if [ -e $PWD/database/MD/$File ]; then
		echo
		printf "		$green Yeiii I found it !!"
		sleep 1
		Menu_SRCH_MD
	else
		sleep 1
		echo
		printf "$red The file $cyan $File $green do not exist $yellow"
		Show_all_MD
	fi
}

function Case_SRCH_MD {
	case $SRCH_file_MD in
		1)
			printf "$reset"
			cat $PWD/database/MD/$File
			echo
			printf "$red Gray : $cyan press enter to continue"
			read enter
			Menu_SRCH_MD
			;;
                2)
			echo
			printf "$cyan"
			while read -p "Gray : Give me a new name (example.php) >> " New_name && [ -z $New_name ]; do
				printf "$red
			[W] O_ops!!
			$magenta"
		done

		mv $PWD/database/MD/$File $PWD/database/MD/$New_name
		
		if [ -e $PWD/database/MD/$New_name ]; then
			echo
			printf "		$cyan The file $green $File $cyan was changed to $green $New_name"
			sleep 3
			Search
		else
			echo
			printf "$red [W] O_ops!! Something was wrong"
			sleep 3
			Search
		fi
                        ;;
		3)
			echo
			printf "$cyan"
                        while read -p "Gray : Where you want to copy it >> " Move && [ -z $Move ]; do
                                echo
				printf "$red
                        [W] O_ops!!
                        $cyan"
                done

		if [ -d $Move ]; then
			cp $PWD/database/MD/$File $Move/$File
			echo
			printf "		$cyan The file $File was move to $Move/$File"
                        sleep 3
                        Menu_SRCH_MD
                else
                        echo
			printf "$red [I] O_ops!! Something was wrong"
                        sleep 3
                        Menu_SRCH_MD
                fi
                        ;;
		4)
			echo
			printf "$red"
			while read -p "[I] Gray : Are you sure wanna delete file $File ? >>  " Delete && [ -z $Delete ]; do
				echo
				printf "$red
				[W] O_ops!!"
				sleep 1
			done
			
			if [ ${Delete,,} = y ]; then
				rm -rf $PWD/database/MD/$File
				sleep 1
				echo
				printf "$red Gray : $green Yeii !! $cyan the file $File was remove"
				sleep 3
				Search
			elif [ ${Delete,,} = n ]; then
				echo
				printf "$red Gray : $cyan Getting back . . ."
				sleep 1
				Menu_SRCH_MD
			else
				echo
				printf "$red
				[W] O_ops!!"
				sleep 1
				Menu_SRCH_MD
			fi
			;;
		5)
			Search_MD
			;;
		6)
			Menu
			;;
                0)
			Goodbye
                        ;;
	esac
}

function Show_all_MD {
	sleep 1
	echo "
	"
	printf "		$green do you wanna . . . ?"
	printf "$cyan"
	echo
	while read -p "
1) See all Meta Data files
2) Go to Main Menu
0) exit

IbyC >> " Do && [ -z $Do ]; do
	echo
	printf "$red
                        [W] O_ops!!
		$green"
	done
	case $Do in
		1)
			echo "
			"
			printf "$reset"
			ls $PWD/database/MD
			echo
			printf "$green Gray : $cyan Press enter to continue"
			read enter
			Search
			;;
		2)
			Menu
			;;
		0)
			Goodbye
			;;
	esac
}

function Search_GPS {
	banner
echo "	    
                TO SEARCH"
	echo
	printf "$cyan"
        while read -p "Gray : Name of the file to search ? >>  " File && [ -z $File ]; do
		printf "$red
		[W] O_ops!!
		$cyan"
	done
	sleep 1
	
	if [ -e $PWD/database/GPS/$File ]; then
                echo
                printf "                $green Yeiii I found it !!"
                sleep 1
                Menu_SRCH_GPS
        else
                sleep 2
                echo
                printf "$red The file $cyan $File $red do not exist $green"
                Show_all_GPS
        fi
}

function Menu_SRCH_GPS {
	banner
echo "	    
	        TO SEARCH"
	echo
	printf "$cyan So, what do you wanna do ?"
	echo "
	"
	printf "$green 1) $yellow Look at the content. \n"
	printf "$green 2) $yellow Rename $File \n"
        printf "$green 3) $yellow Copy $File \n"
	printf "$green 4) $yellow Delete $File \n"
        printf "$green 5) $yellow Search another file. \n"
        printf "$green 6) $yellow Back to Main Menu. \n"
        printf "$green 0) $red Exit"
        echo "
        "
        printf "$magenta"
        read -p "Gray >> " SRCH_file_GPS
        Case_SRCH_GPS
}

function Case_SRCH_GPS {
        case $SRCH_file_GPS in
                1)
                        printf "$green"
			cat $PWD/database/GPS/$File
                        echo
                        printf "$cyan Gray : $green press enter to continue"
                        read enter
                        Menu_SRCH_GPS
                        ;;
                2)
                        echo
                        printf "$yellow"
                        while read -p "Gray : Give me a new name (example.php) >> " New_name && [ -z $New_name ]; do
                                printf "$red
                        [W] O_ops!!
                        $magenta"
                done

                mv $PWD/database/GPS/$File $PWD/database/GPS/$New_name

                if [ -e $PWD/database/GPS/$New_name ]; then
                        echo
                        printf "                $cyan The file $reset $File $cyan was change to $green $New_name"
                        sleep 3
                        Search
                else
                        echo
                        printf "$red [W] O_ops!! Something was wrong"
                        sleep 3
                        Search
                fi
                        ;;
                3)
                        echo
                        printf "$cyan"
                        while read -p "Gray : Where you want to copy it >> " Move && [ -z $Move ]; do
                                echo
                                printf "$red
                        [W] O_ops!!
                        $cyan"
                done

		if [ -d $Move ]; then
                        cp $PWD/database/GPS/$File $Move/$File
			echo
                        printf "                $cyan The file $File was copy to $Move/$File"
                        sleep 3
                        Menu_SRCH_GPS
                else
                        echo
                        printf "$red [W] O_ops!! Something was wrong"
                        sleep 3
                        Menu_SRCH_GPS
                fi
                        ;;
                4)
                        echo
                        printf "$red"
                        while read -p "[W] Gray : Are you sure wanna delete file $File ? >>  " Delete && [ -z $Delete ]; do
                                echo
                                printf "$red
                                [W] O_ops!!"
				sleep 1
                        done

			if [ ${Delete,,} = y ]; then
				rm -rf $PWD/database/GPS/$File
				sleep 1
				echo
				printf "$cyan Gray : $green Yeii !! $yellow the file $File was remove"
				sleep 3
				Search
			elif [ ${Delete,,} = n ]; then
				echo
				printf "$magenta Gray : $cyan Getting back . . ."
				sleep 1
				Menu_SRCH_GPS
			else
				echo
				printf "$red
				[W] O_ops!!"
				sleep 1
				Menu_SRCH_GPS
			fi
                        ;;
                5)
                        Search_GPS
                        ;;
                6)
                        Menu
                        ;;
                0)
                        Goodbye
                        ;;
        esac
}

function Show_all_GPS {
	sleep 1
	echo "
	"
	printf "
		$cyan do you wanna . . . ?"
	printf "$yellow"
        echo
        while read -p "
1) See all GPS files
2) Go to Main Menu
0) exit

IbyC >> " Do && [ -z $Do ]; do
        echo
        printf "$red
                        [W] O_ops!!
                $cyan"
        done
        case $Do in
                1)
                        echo "
                        "
			printf "$green"
                        ls $PWD/database/GPS
                        printf "$green"
			echo
                        printf "$cyan Gray : $red Press enter to continue"
                        read enter
                        Search
                        ;;
                2)
                        Menu
                        ;;
                0)
                        Goodbye
                        ;;

		esac
}

function Goodbye {
        if [ -e $PWD/Gray.jpg ]; then
                rm -rf Gray.jpg
        fi
        banner
        echo
printf "$red"
	echo "				     _ ____   ____"
	echo "				    | |  _ \ / ___|"
	echo "				 _  | | |_) | |  _"
	echo "				| |_| |  __/| |_| |"
	echo "				 \___/|_|    \____|"
        echo
        printf "$reset"
        echo $(exit)
}

#Disclaimer
	echo $(clear)
	printf "$cyan"
        echo "                               TERMUX"
        echo "                        Hackeando desde termux"
        echo "                          CESAR HACKER GRAY "
        printf "$yellow"
	echo "   	  ____                        ____"
	echo "  	 / ___|___  ___  __ _ _ __   / ___|_ __ __ _ _   _"
	echo "  	| |   / _ \/ __|/ _  |  __| | |  _|  __/ _  | | | |"
	echo "   	| |__|  __/\__ \ (_| | |    | |_| | | | (_| | |_| |"
	echo "  	 \____\___||___/\__,_|_|     \____|_|  \__,_|\__, |"
        echo "	      	                                     |___/"
        echo
printf "$cyan"
        echo "                            BIENVENIDO"
        echo "                       al mundo de crackers"
        echo "                            "
        sleep 1
printf "$red"
        echo
        echo "                            ADVERTENSIA"
printf "$cyan"
        echo "                      ESTA HERRAMIENTA ES CREADA"
        echo "                CON FINES EDUCATIVOZ HE IMFORMATIVOZ"
        echo "                    POR ELLO NO ME AGO RESPONSABLE"
        echo "                        DEL MAL USO QUE LE DES"
        echo "                        CESAR HACKER THE GRAY"
printf "$red                              Disfruta"
        echo
        echo
printf "              	$blue Press $cyan enter $green to continue $reset"
        read enter
        Menu
					#Cesar

